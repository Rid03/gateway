server:
  port: 8080
  forward-headers-strategy: framework

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      default-filters:
        - name: AddResponseHeader
          args:
            name: X-Gateway
            value: spring-cloud-gateway

      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/users/**
          filters:
            - RewritePath=/users/(?<segment>.*), /${segment}
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@principalOrIpKeyResolver}"
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 150
            - name: CircuitBreaker
              args:
                name: userCircuit
                fallbackUri: forward:/__fallback/users
            - name: Retry
              args:
                retries: 2
                statuses: BAD_GATEWAY, SERVICE_UNAVAILABLE, GATEWAY_TIMEOUT
                methods: GET
            - name: LoggingFilter

        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/orders/**
          filters:
            - RewritePath=/orders/(?<segment>.*), /${segment}
            - name: LoggingFilter

      metrics:
        enabled: true

    loadbalancer:
      cache:
        enabled: true

  redis:
    host: localhost
    port: 6379

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8089/realms/demo

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  metrics:
    tags:
      application: ${spring.application.name}
  endpoint:
    health:
      probes:
        enabled: true